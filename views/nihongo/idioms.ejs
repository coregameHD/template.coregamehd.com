<%- include('../partials/head', { title:"Kagami Nihongo Post Generator", cssFile:"nihongo" }) %>
<%- include('../partials/navbar_nihongo') %>

<body class="d-flex flex-column">
    <div class="page-wrapper" style="flex: 1 0 auto;">
        <div class="container-xl py-4">
            <div class="row g-4">
                <!-- Column 1 -->
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Basic Information</h3>
                            <div class="card-actions">
                                <a href="https://jisho.org" target="_blank" class="btn btn-ghost-secondary btn-sm" title="Markdown Guide">
                                    <i class="fas fa-book-atlas me-2"></i>
                                    Jisho
                                </a>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row g-3 mb-3">
                                <div class="col-md-4">
                                    <label class="form-label" for="japanese-text">Japanese Text</label>
                                    <input type="text" class="form-control" id="japanese-text">
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label" for="romaji-text">Romaji</label>
                                    <input type="text" class="form-control" id="romaji-text">
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label" for="thai-text">Thai Translation</label>
                                    <input type="text" class="form-control" id="thai-text">
                                </div>
                                <div class="mb-0">
                                    <label class="form-label" for="gametitle">Game Title</label>
                                    <input type="text" class="form-control" id="gametitle">
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Description block -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">คำอธิบาย</h3>
                        </div>
                        <div class="card-body p-0">
                                <textarea 
                                    id="description" 
                                    class="form-control border-0" 
                                    placeholder="Enter description"
                                    style="min-height: 400px; resize: true;"
                                    spellcheck="false"
                                ></textarea>
                        </div>
                    </div>
                </div>

                <!-- Column 2 (Preview) -->
                <div class="col-md-4">
                    <div class="sticky-top" style="top: 5rem; margin-bottom: 2rem;">
                    <div class="card h-100">
                        <div class="card-header">
                            <h3 class="card-title">Preview</h3>
                            <div class="card-actions">
                                <button class="btn btn-ghost-secondary btn-sm" id="exampleButton"><i class="fas fa-lightbulb me-2"></i>Example</button>
                            </div>
                        </div>
                        <div class="card-body p-0 d-flex flex-column">
                            <div class="preview-output flex-grow-1" id="preview"></div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between align-items-center">
                                <button id="clearAllBtn" class="btn btn-outline-danger">
                                    <i class="fas fa-trash-alt me-2"></i>Clear All
                                </button>
                                <button class="btn btn-primary" id="copyButtonBottom">
                                    <i class="fas fa-copy me-2"></i>Copy to Clipboard
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <!-- Original script -->
    <script>
        // Initialize Tom Select
        const japaneseTextInput = document.getElementById('japanese-text');
        const romajiTextInput = document.getElementById('romaji-text');
        const thaiTextInput = document.getElementById('thai-text');
        const descriptionInput = document.getElementById('description');
        const gameTitleInput = document.getElementById('gametitle');
        const previewOutput = document.getElementById('preview');
        // Get both copy buttons
        const copyButtonTop = document.getElementById('copyButtonTop');
        const copyButtonBottom = document.getElementById('copyButtonBottom');
        const exampleButton = document.getElementById('exampleButton');

        // Initialize the preview
        function updatePreview() {
            let japaneseText = japaneseTextInput.value;
            let romajiText = romajiTextInput.value;
            let thaiText = thaiTextInput.value;
            let description = descriptionInput.value;
            let gameTitle = gameTitleInput.value;
            
            let output = `【สุภาษิต - สำนวนญี่ปุ่น】\n\n${japaneseText}\n${romajiText}\n${thaiText}`;

            output += `\n\n————————————\n➡️ คำอธิบาย\n\n${description}`;

            output += `\n\n————————————\n▍ภาพจากเกม ${gameTitle}`;

            previewOutput.textContent = output;
        }

        // Add event listeners for all inputs
        const textInputs = [
            japaneseTextInput, romajiTextInput, thaiTextInput,
            descriptionInput, gameTitleInput
        ];
        
        // Add input event listeners to text inputs
        textInputs.forEach(input => {
            if (input) input.addEventListener('input', updatePreview);
        });

        // Custom toast notification system
        function showToast(message, type = 'success') {
            // Create toast container if it doesn't exist
            let toastContainer = document.querySelector('.toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
                toastContainer.style.zIndex = '1090';
                document.body.appendChild(toastContainer);
            }
            
            const toastId = 'toast-' + Date.now();
            const toast = document.createElement('div');
            toast.id = toastId;
            
            // Use Tabler's alert classes
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const iconClass = type === 'success' ? 'fas fa-circle-check' : 'fas fa-exclamation-circle';
            
            toast.className = `alert ${alertClass} alert-dismissible fade show`;
            toast.role = 'alert';
            
            toast.innerHTML = `
                <div class="d-flex align-items-center">
                    <i class="${iconClass} me-2"></i>
                    <div>${message}</div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            
            // Auto remove toast after delay
            setTimeout(() => {
                toast.classList.remove('show');
                toast.classList.add('fade');
                setTimeout(() => {
                    toast.remove();
                    if (toastContainer && toastContainer.children.length === 0) {
                        toastContainer.remove();
                    }
                }, 150);
            }, 3000);
            
            // Add close button functionality
            const closeBtn = toast.querySelector('.btn-close');
            if (closeBtn) {
                closeBtn.addEventListener('click', () => {
                    toast.classList.remove('show');
                    toast.classList.add('fade');
                    setTimeout(() => {
                        toast.remove();
                        if (toastContainer && toastContainer.children.length === 0) {
                            toastContainer.remove();
                        }
                    }, 150);
                });
            }
        }

        // Function to handle copy to clipboard
        async function handleCopyToClipboard() {
            const textToCopy = previewOutput.textContent.trim();
            
            if (!textToCopy) {
                showToast('No content to copy!', 'error');
                return;
            }
            
            try {
                // Try the modern clipboard API first
                if (navigator.clipboard) {
                    await navigator.clipboard.writeText(textToCopy);
                } else {
                    // Fallback for older browsers
                    const textarea = document.createElement('textarea');
                    textarea.value = textToCopy;
                    textarea.style.position = 'fixed';  // Prevent scrolling to bottom
                    document.body.appendChild(textarea);
                    textarea.select();
                    
                    try {
                        const successful = document.execCommand('copy');
                        if (!successful) {
                            throw new Error('Copy command was unsuccessful');
                        }
                    } finally {
                        document.body.removeChild(textarea);
                    }
                }
                
                showToast('Copied to clipboard!', 'success');
                
            } catch (err) {
                console.error('Could not copy text: ', err);
                showToast('Failed to copy. Please try again or copy manually.', 'error');
            }
        }
        
        // Add event listeners to both copy buttons
        if (copyButtonTop) copyButtonTop.addEventListener('click', handleCopyToClipboard);
        if (copyButtonBottom) copyButtonBottom.addEventListener('click', handleCopyToClipboard);

        // Clear All button functionality
        const clearAllBtn = document.getElementById('clearAllBtn');
        if (clearAllBtn) {
            clearAllBtn.addEventListener('click', function() {
                // Clear text inputs
                textInputs.forEach(input => {
                    if (input && (input.type === 'text' || input.type === 'textarea')) {
                        input.value = '';
                        // Trigger input event to update preview
                        input.dispatchEvent(new Event('input'));
                    }
                });
                
                // Update the preview
                updatePreview();
            });
        }

        // Example button handler to set preview text
        if (exampleButton) {
            exampleButton.addEventListener('click', () => {
                const exampleText = `【สุภาษิต - สำนวนญี่ปุ่น】

青天の霹靂
seiten no hekireki
ฟ้าผ่าในวันฟ้าใส

————————————
➡️ คำอธิบาย

青天の霹靂 (せいてんのへきれき) แปลตรงตัวว่าเกิดเหตุฟ้าผ่าในวันที่ท้องฟ้าปลอดโปร่ง ซึ่งเปรียบเปรยเหมือนกับเรื่องที่ไม่คาดคิด

ใช้เพื่อบ่งบอกว่าเป็นเหตุการณ์ที่เกิดขึ้นอย่างกะทันหันโดยไม่ทันตั้งตัว อยู่ดีๆ ก็เกิดขึ้นโดยที่ไม่มีวี่แววมาก่อน

————————————
▍ภาพจากเกม Hatsukoi Master Up (初恋マスターアップ)`;
                previewOutput.textContent = exampleText;
            });
        }

        // Initialize the preview
        updatePreview();
    </script>

</body>

</html>